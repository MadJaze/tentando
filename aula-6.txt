    1  ls
    2  ls -a
    3  ls ..
    4  pwd
    5  cd documents/
    6  pwd
    7  ls
    8  cd ~
    9  pwd
   10  cd Desktop
   11  ls
   12  rm banner-promocional
   13  rm BANNER PROMOCIONAL.pdf
   14  rm 'BANNER PROMOCIONAL.pdf' 
   15  mkdir commando-git
   16  mkdir -p new/old
   17  rm new
   18  rm 'new'
   19  ls new
   20  rm new/
   21  rm 'Tabela KF TURISMO.pdf' 
   22  rm new/
   23  ls
   24  rm -r new
   25  echo 
   26  echo 'uma mensagem no seu shell'
   27  cat
   28  cat 'DECLARAÇÃO-DE-RESIDENCIA.pdf' 
   29  64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c
   30  cat 'RELATÓRIO ESTÁGIO DE ALIMENTOS.docx' 
   31  64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c  pwd
   32  pwd
   33  mv 'commando-git' commando_git
   34  mkdir new
   35  mv commando_git/new
   36  mv --help
   37  mv new commando_git
   38  mv new desktop
   39  cd commando_git/
   40  mv new desktop 
   41  mkdir test
   42  cd ..
   43  mkdir again
   44  mv again commando_git
   45  pwd
   46  cd desktop
   47  cd commando_git
   48  touch arquivo.pdf
   49  arquivo.doc
   50  clear
   51  touch arquivo.docx
   52  cat > arquivo.docx 
   53  cat > 'arquivo.docx' 
   54  clear
   55  touch arquivo2.txt
   56  cat > arquivo2.txt
   57  clear
   58  cd..
   59  cd ..
   60  cat RELATÓRIO\ ESTÁGIO\ DE\ ALIMENTOS.docx 
   61  64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c
   62  64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c64;1;2;4;6;9;15;21;22;28;29c
   63  pwd
   64  cd desktop/commando_git
   65  ls
   66  rm -r again desktop test
   67  cat arquivo.docx
   68  cat arquivo.docx
   69  rm arquivo.docx
   70  touch arquivo.docx
   71  cat arquivo.docx
   72  history 
   73  pwd
   74  touch readme.md
   75  rm readme.md
   76  cat arquivo.txt
   77  clear
   78  history
   79  ls
   80  rm arquiovo.txt arquivo.txt
   81  clear
   82  ls
   83  touch readme.md
   84  clear
   85  git commit -m "Primeiro Commit"
   86  git status 
   87  git branch -M "main"
   88  git remote add origin https://github.com/MadJaze/projeto-git.git
   89  git push -U origin main  
   90  git push -u origin main
   91  pwd
   92  cd desktop/
   93  ls
   94  cd commando_git/
   95  git status 
   96  git remote add origin 
   97  usuario@LG MINGW64 ~/Desktop/commando_git (main)
   98  $ git push -u origin main
   99  $ git push -u origin main https://github.com/MadJaze/projeto-git.git
  100  $ git remote add origin main https://github.com/MadJaze/projeto-git.git
  101  $ git remote add origin https://github.com/MadJaze/projeto-git.git
  102  git push -u origin main
  103  git branch -M "master"
  104  git push -u origin master 
  105  rm commando_git
  106  rm commando_git/
  107  rm -r commando_git
  108  rm -r commando_git
  109  pwd
  110  cd desktop/commando_git
  111  ls
  112  ls -a
  113  rm ..
  114  pwd
  115  cd desktop
  116  mkdir comando-git
  117  ls
  118  clear
  119  git config user.name
  120  git config user.email
  121  clear
  122  cd comando-git/
  123  touch readme.md
  124  git init
  125  git status 
  126  ls -a
  127  echo 'aprendendo a usar git' > readme.md
  128  git status 
  129  git add readme.md 
  130  git status 
  131  git commit -m 'Tentei fazer commit antes mais não consegui'
  132  git status 
  133  echo 'auxilio' >> readme.md
  134  git status
  135  echo 'Jasiel Padrón' > participante.txt 
  136  git status 
  137  git add .
  138  git status 
  139  git status 
  140  git restore --staged participante.txt
  141  git status 
  142  git add participante.txt
  143  git status 
  144  git restore --staged participante.txt
  145  git status 
  146  git add participante.txt 
  147  git status 
  148  echo  'Escrever algo primeiro e depois aplicar dois signos de maior, depois, nome do arquivo >> readme.md
  149  echo 'mensagem'
  150  echo 'mensagem de natal' >> readme.md
  151  git status
  152  git add readme.md
  153  git status 
  154  cat participante.txt
  155  cat >> participante.txt
  156  cat participante.txt
  157  clear
  158  git status
  159  git add participante.txt
  160  git restore --staged participante.txt
  161  git status
  162  cat participante.txt
  163  git add participante.txt
  164  clear
  165  git status
  166  git restore --staged .
  167  git status 
  168  git commit -am 'Alteração no readme'
  169  git status
  170  git add participante.txt
  171  git commit -m 'adicionando participante.txt'
  172  git status 
  173  history > aula_3.txt
  174  git status 
  175  git add aula_3.txt
  176  git commit -m 'Chegou o histórico' 
  177  git commit -m 'nada'
  178  git commit 
  179  git status 
  180  git restore --staged participante.txt
  181  git status
  182  git status 
  183  git restore --staged participante.txt
  184  git status
  185  git restore --staged .
  186  git status
  187  ls
  188  git add 
  189  clear
  190  git status
  191  git rm --cached participante.txt
  192  ls
  193  git status
  194  git add participante.txt
  195  git status
  196  git restore --staged participante.txt 
  197  git status
  198  git rm --cached participante.txt
  199  git status
  200  git rm --cached .
  201  git status
  202  clear
  203  echo 'A veces no entiendo esta mierda' >> brutal.txt
  204  ls
  205  git status
  206  git add brutal.txt
  207  git status
  208  git restore --staged participante.txt
  209  git status
  210  ls
  211  git status
  212  git restore --staged brutal.txt
  213  git status
  214  ls
  215  cat participante.txt
  216  Buenos dias pendejos
  217  clear
  218  cd desktop/
  219  ls
  220  cd comando-git
  221  ls
  222  git status
  223  git add brutal.txt
  224  git status
  225  git commit -m brutal.txt
  226  git status
  227  git remote add origin https://github.com/MadJaze/repositorio-brutal.git
  228  git status
  229  git log
  230  pwd
  231  cd desktop/comando-git
  232  git status
  233  git remote add origin https://github.com/MadJaze/repositorio-brutal.git
  234  git log
  235  git log
  236  pwd
  237  cd desktop/comando-git
  238  git log
  239  git log
  240  ls
  241  cat readme.md
  242  cat aula_3.txt
  243  clear
  244  less aula_3.txt
  245  git log
  246  git remote 
  247  git remote -v
  248  git push origin master
  249  git fetch
  250  git pull
  251  git push origin master
  252  clear
  253  git log
  254  git log -2
  255  git log --pretty=oneline -2 
  256  clear
  257  git log -p
  258  git log -p -2
  259  clear
  260  git log --pretty=oneline
  261  git reset HEAD
  262  git log pretty=oneline
  263  git log --pretty=oneline
  264  git reset HEAD~
  265  GIT STATUS
  266  git status
  267  clear
  268  git branch 
  269  git checkout -b feature 
  270  git branch
  271  git checkout -b feature 
  272  git checkout -b master
  273  git log --pretty=oneline
  274  touch nova-feature
  275  git add nova-feature
  276  git commit -m 'adicionando nova feature' 
  277  git status
  278  git add aula-4.txt
  279  git commit -m 'aula-4'
  280  git status
  281  git log --pretty=oneline 
  282  got checkout master 
  283  git checkout master
  284  git log --pretty=oneline
  285  touch continuando-pelo-outro-lado.txt
  286  git add continuando-pelo-outro-lado.txt 
  287  git commit -m 'continuando-pelo outro-lado-sem-tocar-o-feature'
  288  git log --pretty=oneline
  289  git checkout feature
  290  git log --pretty=oneline
  291    clear
  292  git checkout master
  293  clear
  294  git log
  295  git checkout feature
  296  git log
  297  clear
  298  git checkout -b feature2 master
  299  git log 
  300  clear
  301  git checkout -d feature2
  302  git log
  303  git checkout feature
  304  git log 
  305  clear
  306  git checkout feature2 master
  307  git checkout -b feature2 master
  308  git checkout feature2
  309  git checkout -d feature2
  310  git checkout -b feature2 master
  311  git checkout -b feature2
  312  clear
  313  git log
  314  git checkout -d feature2 
  315  git log
  316  git checkout -d meu-primeiro-commit
  317  git log 
  318  git status
  319  git reset
  320  git status
  321  echo '.vscode/ > .gitignore
  322  echo '.vscode/' > .gitignore
  323  gitstatus
  324  git status
  325  echo 'another.conf' >> .gitignore
  326  git status
  327  ls
  328  git checkout master]
  329  git checkout master
  330  git status
  331  git add .gitignore
  332  git commit -m 'Commiti um grave erro'
  333  git status
  334  git status
  335  git checkout master
  336  ls
  337  clear
  338  git branch
  339  git checkout feature 
  340  ls
  341  git checkout feature2
  342  ls
  343  git checkout meu-primeiro-commit
  344  ls
  345  git checkout testando 
  346  ls
  347  git checkout -d feature2
  348  git checkout feature2
  349  git branch -d feature2
  350  git checkout master
  351  git branch -d feature2
  352  git checkout feature2
  353  git branch
  354  git checkout meu-primeiro-commit
  355  ls
  356  git branch
  357  git log
  358  echo 'commití um grave erro' > arquivo-segredo.txt
  359  git add arquivo-segredo.txt 
  360  git commit -m 'não leia'
  361  git status
  362  echo '.vscode/' > .gitignore
  363  git status
  364  echo 'another.conf' >> .gitignore
  365  git status 
  366  git add .gitignore
  367  git commit -m 'fazendo de novo'
  368  git status
  369  clear
  370  git log
  371  git status
  372  git add arquivo-segredo.txt
  373  git commit -m 'de novo de novo de novo'
  374  git status 
  375  clear
  376  git log
  377  git checkout master
  378  git log
  379  git checkout feature 
  380  git branch
  381  git checkout brutal 
  382  git log
  383  touch código-brutal.txt
  384  git status 
  385  mv códigobrutal.txt codigobrutal.txt
  386  mv código-brutal.txt > codigo-brutal.txt
  387  mv --help
  388  clear
  389  cat código-brutal.txt
  390  git status
  391  echo '.vscode/' > .gitignore
  392  echo 'another.conf' >> .gitignore
  393  git status
  394  rm  "c\303\263digo-brutal.txt"
  395  cat codigo-brutal.txt
  396  rm código-brutal.txt
  397  ls
  398  clear
  399  git status
  400  git add .
  401  git status
  402  git commit -am 'Voce entendeu que esta branche é brutal mesmo'
  403  git loig
  404  clear
  405  git log
  406  clear
  407  git checkout master
  408  git log --pretty=oneline --graph
  409  git checkout feature 
  410  git log --pretty=oneline --graph
  411  git checkout meu-primeiro-commit
  412  git log --pretty=oneline --graph
  413  clear
  414  git checkout master 
  415  cd desktop/comando-git
  416  git log --pretty=oneline --graph
  417  clear
  418  git config --global alias.logpg 'log --pretty=online --graph'
  419  git logpg
  420  git config alias.logpg 'log ==pretty=oneline --graph'
  421  git logpg
  422  git tag
  423  git tag -a v0.0 'até aula 5'
  424  git tag -a v0.0´-m 'até aula 5'
  425  git tag -a v0.0 -m 'até 5'
  426  git tag 
  427  git log --pretty=oneline --graph
  428  git checkout master 
  429  git rebase feature 
  430  git log --pretty=oneline-- graph 
  431  git log --pretty=oneline --graph
  432  git checkouy meu-primeiro-commit
  433  git checkout meu-primeiro-commit
  434  git log 
  435  clear
  436  history > aula-6.txt
